#include<iostream>
using namespace std;

char maze[101][101] = {};
int m = 0, n = 0, num = 0;
int Ans[100] = {};


//递归主函数
int answer(int a, int b, int c, int d, int step) {
	if (a == c && b == d) {
		Ans[num] = step;
		num++;
		return step;
	}
	else {
		//向上移动
		if (a - 1 >= 0) {
			if (maze[a - 1][b] == 'T' || maze[a - 1][b] == '.') {
				maze[a][b] = '@';
				answer(a - 1, b, c, d, step + 1);
				maze[a][b] = '.';
			}
		}
		//向下移动
		if (a + 1 <= 100) {
			if (maze[a + 1][b] == 'T' || maze[a + 1][b] == '.') {
				maze[a][b] = '@';
				answer(a + 1, b, c, d, step + 1);
				maze[a][b] = '.';
			}
		}
		//向左移动
		if (b - 1 >= 0) {
			if (maze[a][b - 1] == 'T' || maze[a][b - 1] == '.') {
				maze[a][b] = '@';
				answer(a, b - 1, c, d, step + 1);
				maze[a][b] = '.';
			}
		}
		//向右移动
		if (b + 1 <= 100) {
			if (maze[a][b + 1] == 'T' || maze[a][b + 1] == '.') {
				maze[a][b] = '@';
				answer(a, b + 1, c, d, step + 1);
				maze[a][b] = '.';
			}
		}
		return 100000;
	}
}

int main()
{
	//输入迷宫地图maze，找到S和T的坐标
	cin >> n >> m;
	int sx, sy, tx, ty;
	for (int i = 0; i < n; i++) {
		cin >> maze[i];
		for (int j = 0; j < m; j++) {
			if (maze[i][j] == 'S') {
				sx = i; 
				sy = j;
			}
			else if (maze[i][j] == 'T') {
				tx = i;
				ty = j;
			}
		}
	}
	
	answer(sx, sy, tx, ty, 0);

	int min = 100000;
	for (int i = 0; i < num; i++) {
		if (min > Ans[i]) min = Ans[i];
	}
	cout << min << endl;

	return 0;
}