#include<iostream>
#include<math.h>
using namespace std;

char s[32] = {};
int b[32] = {}, n = 0;


int done(int n,int dflag)
{
	if (n >= 2)
	{
		b[dflag] = n % 2;
		done(n / 2, dflag + 1);
	}
	else if (n == 1)
	{
		b[dflag] = 1;
	}

	else if (n < 0)
	{
		n *= (-1);
		n--;
		if (n >= 2)
		{
			b[dflag] = n % 2;
			done(n / 2, dflag + 1);
		}
		else if (n == 1)
		{
			b[dflag] = 1;
		}
		for (int i = 0; i < 32; i++)
		{
			if (b[i] == 1) b[i] = 0;
			else if (b[i] == 0) b[i] = 1;
		}
	}
	return 1;
}


int main()
{
	while (true)
	{
		cin >> s;
		if ((s[0] >= 65) && (s[0] <= 122)) break;  //输入字母，结束
		else
		{
			int len = 0; 
			n = 0;
			for (int i = 0; i < 20; i++)  //统计长度
			{
				if (s[i] == '\0') break;
				len++;
			}


			if (s[0] == 45)  //输入负数
			{
				int ten = len - 2;
				int o = 0;
				for (int i = 1; i < len; i++)
				{
					o = (int)s[i] - 48;
					for (int j = 0; j < ten; j++)
					{
						o *= 10;
					}
					n += o;
					ten--;
				}
				n *= (-1);
			}
			else  //输入正数
			{
				int ten = len - 1;
				int o = 0;
				for (int i = 0; i < len; i++)
				{
					o = (int)s[i] - 48;
					for (int j = 0; j < ten; j++)
					{
						o *= 10;
					}
					n += o;
					ten--;
				}
			}
		}


		int dflag = 0;
		done(n, dflag); //主体功能函数
		for (int i = 0; i < 32; i++)
		{
			cout << b[31 - i];
		}
		cout << endl;


		for (int i = 0; i < 32; i++)  //初始化
		{
			s[i] = '\0';
			b[i] = 0;
		}
		dflag = 0;

	}

	return 0;
}